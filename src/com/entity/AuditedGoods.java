package com.entity;
// Generated 2017-6-4 10:51:05 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.apache.struts2.json.annotations.JSON;

/**
 * Goods generated by hbm2java
 */
@Entity
@Table(name = "audited_goods", catalog = "shtp")
public class AuditedGoods implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer id;
	//定一个Member类型的关联属性member
	private Member member;
	private Category category;
	private String name;
	private Long price;
	private String img;

	private String intro;
	private String state;
	
	private String isRecommend;
	
	public AuditedGoods() {
	}

	public AuditedGoods(Member member, Category category, String name, Long price, String img,
		String state,String isRecommend) {
		this.member = member;
		this.category = category;
		this.name = name;
		this.price = price;
		this.img = img;
        this.state=state;
        this.isRecommend = isRecommend;
	}
    //@Id声明实体类的属性映射为数据库的主键列
	//@GeneratedValue(strategy = IDENTITY)  标注逐渐的生成策略   IDENTITY自增
	//@Column标识实体类中属性与数据库表字段的对应关系
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "d_id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
    //再使用@ManyToOne  @JoinColumn实现Goods到Member的多对一关联    LAZY标识关联了在被访问时才加载
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "u_id") //外键
	//过滤不需要的变量               struts2返回Json类型的数据时 json会自动转换成json形式的变量   如果哪个变量不需要时使用该注解 
	@JSON(serialize=false) 
	public Member getMember() {
		return this.member;
	}

	public void setMember(Member member) {
		this.member = member;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category")//外键 
	@JSON(serialize=false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "d_name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "d_price", precision = 10, scale = 0)
	public Long getPrice() {
		return this.price;
	}

	public void setPrice(Long price) {
		this.price = price;
	}

	@Column(name = "d_img")
	public String getImg() {
		return this.img;
	}

	public void setImg(String img) {
		this.img = img;
	}

	
	
	
	
	@Column(name = "d_desc")
	public String getIntro() {
		return intro;
	}

	public void setIntro(String intro) {
		this.intro = intro;
	}

	@Column(name = "d_state")
	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}
	@Column(name = "is_recommend")
	public String getIsRecommend() {
		return this.isRecommend;
	}

	public void setIsRecommend(String isRecommend) {
		this.isRecommend = isRecommend;
	}
}
