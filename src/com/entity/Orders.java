package com.entity;
// Generated 2017-6-4 10:51:05 by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.struts2.json.annotations.JSON;

/**
 * Orders generated by hbm2java
 */
@Entity       //指定类是持久化类
@Table(name = "orders", catalog = "shtp")    //指定类的对应数据库表
public class Orders implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer id;
	//定一个Goods类型的关联属性goods
	private Goods goods;
	//定一个Member类型的关联属性member
	private Member member;
	private Date orderTime;
	private String tradingSatuts;
	private String memo;

	public Orders() {
	}

	public Orders(Goods goods, Member member, Date orderTime, String tradingSatuts, String memo) {
		this.goods = goods;
		this.member = member;
		this.orderTime = orderTime;
		this.tradingSatuts = tradingSatuts;
		this.memo = memo;
	}

	
	//@Id声明实体类的属性       映射为                数据库的主键列
	//@GeneratedValue(strategy = IDENTITY)  标注逐渐的生成策略   IDENTITY自增
	//@Column标识实体类中属性        与      数据库表字段       的对应关系
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "o_id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
	//再使用@ManyToOne  @JoinColumn实现Orders到Goods的多对一关联    LAZY标识关联了在被访问时才加载
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "g_id")       //外键
	//过滤不需要的变量               struts2返回Json类型的数据时 json会自动转换成json形式的变量   如果哪个变量不需要时使用该注解 
	@JSON(serialize=false)
	public Goods getGoods() {
		return this.goods;
	}

	public void setGoods(Goods goods) {
		this.goods = goods;
	}
	//再使用@ManyToOne  @JoinColumn实现Orders到Member的多对一关联    LAZY标识关联了在被访问时才加载
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "u_id")      //外键
	//过滤不需要的变量               struts2返回Json类型的数据时 json会自动转换成json形式的变量   如果哪个变量不需要时使用该注解
	@JSON(serialize=false)          
	public Member getMember() {
		return this.member;
	}

	public void setMember(Member member) {
		this.member = member;
	}
     //格式化时间日期，页面直接得到格式化类型的值
	@Temporal(TemporalType.TIMESTAMP)
	//@Column标识实体类中属性与数据库表字段的对应关系
	@Column(name = "o_time", length = 19)
	public Date getOrderTime() {
		return this.orderTime;
	}

	public void setOrderTime(Date orderTime) {
		this.orderTime = orderTime;
	}

	@Column(name = "trading_satuts", length = 2)
	public String getTradingSatuts() {
		return this.tradingSatuts;
	}

	public void setTradingSatuts(String tradingSatuts) {
		this.tradingSatuts = tradingSatuts;
	}

	@Column(name = "o_sum")
	public String getMemo() {
		return this.memo;
	}

	public void setMemo(String memo) {
		this.memo = memo;
	}

}
