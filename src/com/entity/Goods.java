package com.entity;
// Generated 2017-6-4 10:51:05 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.apache.struts2.json.annotations.JSON;

/**
 * Goods generated by hbm2java
 */
@Entity
@Table(name = "goods", catalog = "shtp")
public class Goods implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer id;
	//瀹氫竴涓狹ember绫诲瀷鐨勫叧鑱斿睘鎬ember
	private Member member;
	private Category category;
	private String name;
	private Long price;
	private String img;
	
	
	private String isRecommend;
	private String isChecked;
	private String intro;
	private Set<Orders> orders = new HashSet<Orders>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Goods() {
	}

	public Goods(Member member, Category category, String name, Long price, String img, String isRecommend,
			Set<Orders> orders, Set<Comment> comments) {
		this.member = member;
		this.category = category;
		this.name = name;
		this.price = price;
		this.img = img;
		this.isRecommend = isRecommend;
		this.orders = orders;
		this.comments = comments;
	}
    //@Id澹版槑瀹炰綋绫荤殑灞炴�鏄犲皠涓烘暟鎹簱鐨勪富閿垪
	//@GeneratedValue(strategy = IDENTITY)  鏍囨敞閫愭笎鐨勭敓鎴愮瓥鐣�  IDENTITY鑷
	//@Column鏍囪瘑瀹炰綋绫讳腑灞炴�涓庢暟鎹簱琛ㄥ瓧娈电殑瀵瑰簲鍏崇郴
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "g_id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
    //鍐嶄娇鐢ˊManyToOne  @JoinColumn瀹炵幇Goods鍒癕ember鐨勫瀵逛竴鍏宠仈    LAZY鏍囪瘑鍏宠仈浜嗗湪琚闂椂鎵嶅姞杞�
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "u_id") //澶栭敭
	//杩囨护涓嶉渶瑕佺殑鍙橀噺               struts2杩斿洖Json绫诲瀷鐨勬暟鎹椂 json浼氳嚜鍔ㄨ浆鎹㈡垚json褰㈠紡鐨勫彉閲�  濡傛灉鍝釜鍙橀噺涓嶉渶瑕佹椂浣跨敤璇ユ敞瑙�
	@JSON(serialize=false) 
	public Member getMember() {
		return this.member;
	}

	public void setMember(Member member) {
		this.member = member;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category")//澶栭敭 
	@JSON(serialize=false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "g_name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "g_price", precision = 10, scale = 0)
	public Long getPrice() {
		return this.price;
	}

	public void setPrice(Long price) {
		this.price = price;
	}

	@Column(name = "g_img")
	public String getImg() {
		return this.img;
	}

	public void setImg(String img) {
		this.img = img;
	}

	@Column(name = "is_recommend")
	public String getIsRecommend() {
		return this.isRecommend;
	}

	public void setIsRecommend(String isRecommend) {
		this.isRecommend = isRecommend;
	}
	
	@Column(name = "is_checked")
	public String getIsChecked() {
		return isChecked;
	}

	public void setIsChecked(String isChecked) {
		this.isChecked = isChecked;
	}
	
	@Column(name = "g_desc")
	public String getIntro() {
		return intro;
	}

	public void setIntro(String intro) {
		this.intro = intro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goods")
	@JSON(serialize=false)
	public Set<Orders> getOrderses() {
		return this.orders;
	}

	public void setOrderses(Set<Orders> orders) {
		this.orders = orders;
	}
    //灏嗗叧鑱斿叧绯荤殑涓荤鏉冨弽杞�    鍗崇敱comment绠＄悊鍏宠仈鍏崇郴   mappedBy鍊间负鍏宠仈鐨勫鐨勪竴鏂癸紙comment锛夋墍瀹氫箟Goods绫荤殑灞炴�
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goods")
	@JSON(serialize=false)
	public Set<Comment> getComments() {
		return comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

}
